name: "go-microservice"

services:

  broker-service:
    build:
      context: ./../broker-service
      dockerfile: broker-service.dockerfile
    restart: always
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1

  log-service:
    build:
      context: ./../logger-service
      dockerfile: logger-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  mailer-service:
    build:
      context: ./../mail-service
      dockerfile: mailer-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_NAME: "Go Microservice"
      FROM_ADDRESS: "go-microservice@example.com"

  auth-service:
    build:
      context: ./../auth-service
      dockerfile: auth-service.dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: postgres://postgres:password@postgres:5432/users?sslmode=disable&connect_timeout=10&timezone=UTC

  listener-service:
    build:
      context: ./../listener-service
      dockerfile: listener-service.dockerfile
    deploy:
      mode: replicated
      replicas: 1


  postgres:
    image: 'postgres:14.0'
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  mongo:
    image: 'mongo:4.4.6'
    ports:
      -  "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=logs
      - MONGO_INITDB_ROOT_USERNAME=admin      
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - ./db-data/mongo/:/data/db

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"
  
  rabbitmq:
    image: 'rabbitmq:3.9-alpine'
    ports:
      - "5672:5672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/rabbitmq/:/var/lib/rabbitmq/